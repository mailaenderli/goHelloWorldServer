# Dockerfile References: https://docs.docker.com/engine/reference/builder/

# Start from the latest golang base image
FROM golang:latest

# Add Maintainer Info
LABEL maintainer="Nofar Bluestein <nofarb@gmail.com>"

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags netgo

# Expose port 8080 to the outside world
EXPOSE 8080


FROM alpine:latest
# Add Maintainer Info
LABEL maintainer="Nofar Bluestein <nofarb@gmail.com>"
# Copy the Go binary into the image. The Go binary must be
# statically compiled with CGO disabled. Use the following
# build command:
#
#   CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags netgo
#
COPY --from=0 /app/go-sample-app /bin/
# Command to run the executable
ENTRYPOINT ["/bin/go-sample-app"]
